{
  "s3": {
    "client": {
      "accessKeyId": "accessKey1",
      "secretAccessKey": "verySecretKey1",
      "endpoint": "http://127.0.0.1:8000",
      "s3ForcePathStyle": true
    },
    "buckets": [
      "invoices",
      "usercontent",
      "internal"
    ],
    "bucketsLifecycleConfigs": [
      {
        "Bucket": "invoices",
        "LifecycleConfiguration": {
          "Rules": [
            {
              "Status": "Enabled",
              "Expiration": {
                "Date": "2019-05-30T00:00:00.000Z"
              },
              "Filter": {
                "Prefix": "temp/"
              },
              "ID": "Delete all files under folder and the folder as-well"
            }
          ]
        }
      },
      {
        "Bucket": "usercontent",
        "LifecycleConfiguration": {
          "Rules": [
            {
              "Status": "Enabled",
              "Expiration": {
                "Days": 1
              },
              "Filter": {
                "Tag": {
                  "Key": "id_1",
                  "Value": "value_1"
                }
              },
              "ID": "Delete all files tagged with Tag { Key: id_1, Value: value_1 }"
            }
          ]
        }
      }
    ]
  },
  "logger": {
    "fieldOptions": {
      "maskFields": [
        "password",
        "request.password",
        "request.token",
        "items.[0].password"
      ],
      "bufferFields": [
        {
          "fieldPath": "decodedMsg.metadata"
        },
        {
          "fieldPath": "messages.[0].metadata"
        }
      ],
      "omitFields": [
        "context",
        "custom_arguments",
        "metadata",
        "subject.token",
        "token",
        "tokens",
        "items.[0].tokens",
        "messages.[0].tokens",
        "request.items.[0].tokens",
        "response.payload.token",
        "response.payload.tokens",
        "request.subject.token",
        "users.items.[0].payload.tokens",
        "response.items.[0].payload.tokens",
        "messages.[0].subject.token",
        "decodedMsg.subject.token",
        "request.subject.tokens"
      ]
    }
  },
  "redis": {
    "url": "redis://localhost:6379",
    "offsetStoreInterval": 1000,
    "db-indexes": {
      "db-offsetStore": 0,
      "db-subject": 4,
      "db-aclStore": 9
    }
  },
  "events": {
    "kafka": {
      "provider": "kafka",
      "groupId": "restore-ostorage-srv",
      "kafka": {
        "clientId": "restore-ostorage-srv",
        "brokers": [
          "localhost:29092"
        ]
      },
      "latestOffset": false,
      "restoreCommand": {
        "messageObject": "io.restorecommerce.commandinterface.CommandRequest"
      },
      "restoreResponse": {
        "messageObject": "io.restorecommerce.commandinterface.CommandResponse"
      },
      "healthCheckCommand": {
        "messageObject": "io.restorecommerce.commandinterface.CommandRequest"
      },
      "healthCheckResponse": {
        "messageObject": "io.restorecommerce.commandinterface.CommandResponse"
      },
      "versionCommand": {
        "messageObject": "io.restorecommerce.commandinterface.CommandRequest"
      },
      "versionResponse": {
        "messageObject": "io.restorecommerce.commandinterface.CommandResponse"
      },
      "resetCommand": {
        "messageObject": "io.restorecommerce.commandinterface.CommandRequest"
      },
      "resetResponse": {
        "messageObject": "io.restorecommerce.commandinterface.CommandResponse"
      },
      "renderRequest": {
        "messageObject": "io.restorecommerce.rendering.RenderRequest"
      },
      "renderResponse": {
        "messageObject": "io.restorecommerce.rendering.RenderResponse"
      },
      "configUpdateCommand": {
        "messageObject": "io.restorecommerce.commandinterface.CommandRequest"
      },
      "configUpdateResponse": {
        "messageObject": "io.restorecommerce.commandinterface.CommandResponse"
      },
      "setApiKeyCommand": {
        "messageObject": "io.restorecommerce.commandinterface.CommandRequest"
      },
      "setApiKeyResponse": {
        "messageObject": "io.restorecommerce.commandinterface.CommandResponse"
      },
      "flushCacheCommand": {
        "messageObject": "io.restorecommerce.commandinterface.CommandRequest"
      },
      "flushCacheResponse": {
        "messageObject": "io.restorecommerce.commandinterface.CommandResponse"
      },
      "objectUploaded": {
        "messageObject": "io.restorecommerce.ostorage.OstorageMessage"
      },
      "objectDownloadRequested": {
        "messageObject": "io.restorecommerce.ostorage.OstorageMessage"
      },
      "topics": {
        "ostorage": {
          "topic": "io.restorecommerce.ostorage"
        },
        "command": {
          "topic": "io.restorecommerce.command",
          "events": [
            "healthCheckCommand",
            "restoreCommand",
            "resetCommand",
            "versionCommand",
            "configUpdateCommand",
            "setApiKeyCommand",
            "flushCacheCommand"
          ]
        }
      }
    }
  },
  "server": {
    "transports": [
      {
        "name": "grpcOstorage",
        "provider": "grpc",
        "addr": "0.0.0.0:50066"
      }
    ]
  },
  "serviceNames": {
    "ostorage": "io-restorecommerce-ostorage-srv",
    "reflection": "io-restorecommerce-ostorage-reflection",
    "cis": "io-restorecommerce-ostorage-cis",
    "health": "grpc-health-v1"
  },
  "authorization": {
    "service": "ostorage-srv",
    "enabled": true,
    "enforce": true,
    "urns": {
      "entity": "urn:restorecommerce:acs:names:model:entity",
      "user": "urn:restorecommerce:acs:model:user.User",
      "model": "urn:restorecommerce:acs:model",
      "role": "urn:restorecommerce:acs:names:role",
      "roleScopingEntity": "urn:restorecommerce:acs:names:roleScopingEntity",
      "roleScopingInstance": "urn:restorecommerce:acs:names:roleScopingInstance",
      "unauthenticated_user": "urn:restorecommerce:acs:names:unauthenticated-user",
      "property": "urn:restorecommerce:acs:names:model:property",
      "ownerIndicatoryEntity": "urn:restorecommerce:acs:names:ownerIndicatoryEntity",
      "ownerInstance": "urn:restorecommerce:acs:names:ownerInstance",
      "orgScope": "urn:restorecommerce:acs:model:organization.Organization",
      "subjectID": "urn:oasis:names:tc:xacml:1.0:subject:subject-id",
      "resourceID": "urn:oasis:names:tc:xacml:1.0:resource:resource-id",
      "actionID": "urn:oasis:names:tc:xacml:1.0:action:action-id",
      "action": "urn:restorecommerce:acs:names:action",
      "operation": "urn:restorecommerce:acs:names:operation",
      "execute": "urn:restorecommerce:acs:names:action:execute",
      "permitOverrides": "urn:oasis:names:tc:xacml:3.0:rule-combining-algorithm:permit-overrides",
      "denyOverrides": "urn:oasis:names:tc:xacml:3.0:rule-combining-algorithm:deny-overrides",
      "create": "urn:restorecommerce:acs:names:action:create",
      "read": "urn:restorecommerce:acs:names:action:read",
      "modify": "urn:restorecommerce:acs:names:action:modify",
      "delete": "urn:restorecommerce:acs:names:action:delete",
      "organization": "urn:restorecommerce:acs:model:organization.Organization",
      "aclIndicatoryEntity": "urn:restorecommerce:acs:names:aclIndicatoryEntity",
      "aclInstance": "urn:restorecommerce:acs:names:aclInstance",
      "skipACL": "urn:restorecommerce:acs:names:skipACL",
      "maskedProperty": "urn:restorecommerce:acs:names:obligation:maskedProperty"
    },
    "cache": {
      "url": "redis://localhost:6379",
      "port": 6379,
      "db-index": 5,
      "ttl": 3600,
      "prefix": "acs:"
    }
  },
  "client": {
    "acs-srv": {
      "address": "localhost:50061"
    },
    "user": {
      "address": "localhost:50051"
    }
  },
  "errors": {
    "INVALID_CREDENTIALS": {
      "code": "401",
      "message": "Invalid credentials"
    },
    "USER_NOT_LOGGED_IN": {
      "code": "401",
      "message": "Invalid authentication context, please log in first"
    },
    "ACTION_NOT_ALLOWED": {
      "code": "403",
      "message": "Action not allowed on this resource"
    }
  }
}
